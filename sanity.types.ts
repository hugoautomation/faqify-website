/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type AllPosts16 = {
  _type: "all-posts-16";
  padding?: SectionPadding;
};

export type Blog16 = {
  _type: "blog-16";
  padding?: SectionPadding;
  posts?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "post";
  }>;
};

export type AllPosts14 = {
  _type: "all-posts-14";
  padding?: SectionPadding;
};

export type Blog14 = {
  _type: "blog-14";
  padding?: SectionPadding;
  gridColumns?: "grid-cols-2" | "grid-cols-3";
  title?: string;
  posts?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "post";
  }>;
};

export type AllPosts13 = {
  _type: "all-posts-13";
  padding?: SectionPadding;
};

export type Blog13 = {
  _type: "blog-13";
  padding?: SectionPadding;
  gridColumns?: "grid-cols-2" | "grid-cols-3";
  posts?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "post";
  }>;
};

export type AllPosts7 = {
  _type: "all-posts-7";
  padding?: SectionPadding;
};

export type Blog7 = {
  _type: "blog-7";
  padding?: SectionPadding;
  gridColumns?: "grid-cols-2" | "grid-cols-3";
  posts?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "post";
  }>;
};

export type AllPosts4 = {
  _type: "all-posts-4";
  padding?: SectionPadding;
};

export type Blog4 = {
  _type: "blog-4";
  padding?: SectionPadding;
  gridColumns?: "grid-cols-2" | "grid-cols-3";
  posts?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "post";
  }>;
};

export type Feature202Card = {
  _type: "feature-202-card";
  iconVariant?: "none" | "arrow-down-to-line" | "arrow-up-down" | "bell" | "blocks" | "building-2" | "chevron-right" | "chevron-left" | "chevron-down" | "chevron-up" | "check-circle-2" | "circle-dot" | "code" | "compass" | "external-link" | "git-branch" | "globe" | "home" | "infinity" | "landmark" | "layout-grid" | "list" | "lock" | "messages-square" | "move-right" | "play" | "play-circle" | "redo" | "repeat" | "scaling" | "scan" | "sparkles" | "star" | "trophy" | "timer" | "users" | "wand-sparkles" | "wrench" | "zap" | "zoom-in";
  title?: string;
  description?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  link?: Link;
};

export type Feature202 = {
  _type: "feature-202";
  padding?: SectionPadding;
  columns?: Array<{
    _key: string;
  } & Feature202Card>;
};

export type Feature157Card = {
  _type: "feature-157-card";
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  link?: LinkIcon;
};

export type Feature157 = {
  _type: "feature-157";
  padding?: SectionPadding;
  columns?: Array<{
    _key: string;
  } & Feature157Card>;
};

export type Feature117Card = {
  _type: "feature-117-card";
  tag?: {
    iconVariant?: "none" | "arrow-down-to-line" | "arrow-up-down" | "bell" | "blocks" | "building-2" | "chevron-right" | "chevron-left" | "chevron-down" | "chevron-up" | "check-circle-2" | "circle-dot" | "code" | "compass" | "external-link" | "git-branch" | "globe" | "home" | "infinity" | "landmark" | "layout-grid" | "list" | "lock" | "messages-square" | "move-right" | "play" | "play-circle" | "redo" | "repeat" | "scaling" | "scan" | "sparkles" | "star" | "trophy" | "timer" | "users" | "wand-sparkles" | "wrench" | "zap" | "zoom-in";
    text?: string;
  };
  title?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  link?: Link;
};

export type Feature117 = {
  _type: "feature-117";
  padding?: SectionPadding;
  columns?: Array<{
    _key: string;
  } & Feature117Card>;
};

export type Feature66Card = {
  _type: "feature-66-card";
  logo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  link?: Link;
};

export type Feature66 = {
  _type: "feature-66";
  padding?: SectionPadding;
  columns?: Array<{
    _key: string;
  } & Feature66Card>;
};

export type Feature15Card = {
  _type: "feature-15-card";
  iconVariant?: "none" | "arrow-down-to-line" | "arrow-up-down" | "bell" | "blocks" | "building-2" | "chevron-right" | "chevron-left" | "chevron-down" | "chevron-up" | "check-circle-2" | "circle-dot" | "code" | "compass" | "external-link" | "git-branch" | "globe" | "home" | "infinity" | "landmark" | "layout-grid" | "list" | "lock" | "messages-square" | "move-right" | "play" | "play-circle" | "redo" | "repeat" | "scaling" | "scan" | "sparkles" | "star" | "trophy" | "timer" | "users" | "wand-sparkles" | "wrench" | "zap" | "zoom-in";
  title?: string;
  description?: string;
};

export type Feature15 = {
  _type: "feature-15";
  padding?: SectionPadding;
  gridColumns?: "grid-cols-2" | "grid-cols-3";
  columns?: Array<{
    _key: string;
  } & Feature15Card>;
};

export type Feature12Card = {
  _type: "feature-12-card";
  iconVariant?: "none" | "arrow-down-to-line" | "arrow-up-down" | "bell" | "blocks" | "building-2" | "chevron-right" | "chevron-left" | "chevron-down" | "chevron-up" | "check-circle-2" | "circle-dot" | "code" | "compass" | "external-link" | "git-branch" | "globe" | "home" | "infinity" | "landmark" | "layout-grid" | "list" | "lock" | "messages-square" | "move-right" | "play" | "play-circle" | "redo" | "repeat" | "scaling" | "scan" | "sparkles" | "star" | "trophy" | "timer" | "users" | "wand-sparkles" | "wrench" | "zap" | "zoom-in";
  title?: string;
  description?: string;
};

export type Feature12 = {
  _type: "feature-12";
  padding?: SectionPadding;
  tagline?: string;
  columns?: Array<{
    _key: string;
  } & Feature12Card>;
};

export type Feature3Card = {
  _type: "feature-3-card";
  iconVariant?: "none" | "arrow-down-to-line" | "arrow-up-down" | "bell" | "blocks" | "building-2" | "chevron-right" | "chevron-left" | "chevron-down" | "chevron-up" | "check-circle-2" | "circle-dot" | "code" | "compass" | "external-link" | "git-branch" | "globe" | "home" | "infinity" | "landmark" | "layout-grid" | "list" | "lock" | "messages-square" | "move-right" | "play" | "play-circle" | "redo" | "repeat" | "scaling" | "scan" | "sparkles" | "star" | "trophy" | "timer" | "users" | "wand-sparkles" | "wrench" | "zap" | "zoom-in";
  title?: string;
  description?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
};

export type Feature3 = {
  _type: "feature-3";
  padding?: SectionPadding;
  columns?: Array<{
    _key: string;
  } & Feature3Card>;
};

export type FeatureImage = {
  _type: "feature-image";
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
};

export type FeatureContent = {
  _type: "feature-content";
  padding?: SectionPadding;
  iconVariant?: "none" | "arrow-down-to-line" | "arrow-up-down" | "bell" | "blocks" | "building-2" | "chevron-right" | "chevron-left" | "chevron-down" | "chevron-up" | "check-circle-2" | "circle-dot" | "code" | "compass" | "external-link" | "git-branch" | "globe" | "home" | "infinity" | "landmark" | "layout-grid" | "list" | "lock" | "messages-square" | "move-right" | "play" | "play-circle" | "redo" | "repeat" | "scaling" | "scan" | "sparkles" | "star" | "trophy" | "timer" | "users" | "wand-sparkles" | "wrench" | "zap" | "zoom-in";
  tag?: {
    text?: string;
    type?: "title" | "badge";
  };
  title?: string;
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      href?: string;
      target?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    title?: string;
    description?: string;
    _type: "alert";
    _key: string;
  } | {
    videoId?: string;
    _type: "youtube";
    _key: string;
  } | {
    _key: string;
  } & Code>;
  links?: Array<{
    _key: string;
  } & Link>;
};

export type Feature1 = {
  _type: "feature-1";
  padding?: SectionPadding;
  columns?: Array<{
    _key: string;
  } & FeatureContent | {
    _key: string;
  } & FeatureImage>;
};

export type Logos9 = {
  _type: "logos-9";
  padding?: SectionPadding;
  title?: string;
  images?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }>;
  testimonials?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "testimonial";
  }>;
};

export type Logos4 = {
  _type: "logos-4";
  padding?: SectionPadding;
  images?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }>;
};

export type Logos1 = {
  _type: "logos-1";
  padding?: SectionPadding;
  title?: string;
  images?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }>;
};

export type Faq14 = {
  _type: "faq-14";
  padding?: SectionPadding;
  title?: {
    text?: string;
    element?: "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "p" | "div";
    size?: "small" | "default" | "large";
    weight?: "normal" | "medium" | "semibold" | "bold";
  };
  description?: string;
  sections?: Array<{
    title?: string;
    faqs?: Array<{
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      _key: string;
      [internalGroqTypeReferenceTo]?: "faq";
    }>;
    _type: "faqSection";
    _key: string;
  }>;
};

export type Faq9 = {
  _type: "faq-9";
  padding?: SectionPadding;
  faqs?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "faq";
  }>;
};

export type Faq8 = {
  _type: "faq-8";
  padding?: SectionPadding;
  sections?: Array<{
    title?: string;
    faqs?: Array<{
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      _key: string;
      [internalGroqTypeReferenceTo]?: "faq";
    }>;
    _type: "faqSection";
    _key: string;
  }>;
};

export type Faq5 = {
  _type: "faq-5";
  padding?: SectionPadding;
  faqs?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "faq";
  }>;
};

export type Faq1 = {
  _type: "faq-1";
  padding?: SectionPadding;
  faqs?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "faq";
  }>;
};

export type Hero174 = {
  _type: "hero-174";
  backgroundImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  title?: string;
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      href?: string;
      target?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    title?: string;
    description?: string;
    _type: "alert";
    _key: string;
  } | {
    videoId?: string;
    _type: "youtube";
    _key: string;
  } | {
    _key: string;
  } & Code>;
  links?: Array<{
    _key: string;
  } & LinkIcon>;
  tag?: {
    title?: string;
    description?: string;
  };
};

export type Hero160 = {
  _type: "hero-160";
  backgroundImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  tag?: {
    iconVariant?: "none" | "arrow-down-to-line" | "arrow-up-down" | "bell" | "blocks" | "building-2" | "chevron-right" | "chevron-left" | "chevron-down" | "chevron-up" | "check-circle-2" | "circle-dot" | "code" | "compass" | "external-link" | "git-branch" | "globe" | "home" | "infinity" | "landmark" | "layout-grid" | "list" | "lock" | "messages-square" | "move-right" | "play" | "play-circle" | "redo" | "repeat" | "scaling" | "scan" | "sparkles" | "star" | "trophy" | "timer" | "users" | "wand-sparkles" | "wrench" | "zap" | "zoom-in";
    title?: string;
  };
  title?: string;
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      href?: string;
      target?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    title?: string;
    description?: string;
    _type: "alert";
    _key: string;
  } | {
    videoId?: string;
    _type: "youtube";
    _key: string;
  } | {
    _key: string;
  } & Code>;
  links?: Array<{
    _key: string;
  } & LinkIcon>;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
};

export type Hero85 = {
  _type: "hero-85";
  tag?: {
    title?: string;
    description?: string;
  };
  title?: string;
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      href?: string;
      target?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    title?: string;
    description?: string;
    _type: "alert";
    _key: string;
  } | {
    videoId?: string;
    _type: "youtube";
    _key: string;
  } | {
    _key: string;
  } & Code>;
  links?: Array<{
    _key: string;
  } & LinkIcon>;
  images?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }>;
};

export type Hero57 = {
  _type: "hero-57";
  title?: string;
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      href?: string;
      target?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    title?: string;
    description?: string;
    _type: "alert";
    _key: string;
  } | {
    videoId?: string;
    _type: "youtube";
    _key: string;
  } | {
    _key: string;
  } & Code>;
  links?: Array<{
    _key: string;
  } & LinkIcon>;
  tags?: Array<{
    iconVariant?: "none" | "arrow-down-to-line" | "arrow-up-down" | "bell" | "blocks" | "building-2" | "chevron-right" | "chevron-left" | "chevron-down" | "chevron-up" | "check-circle-2" | "circle-dot" | "code" | "compass" | "external-link" | "git-branch" | "globe" | "home" | "infinity" | "landmark" | "layout-grid" | "list" | "lock" | "messages-square" | "move-right" | "play" | "play-circle" | "redo" | "repeat" | "scaling" | "scan" | "sparkles" | "star" | "trophy" | "timer" | "users" | "wand-sparkles" | "wrench" | "zap" | "zoom-in";
    title?: string;
    _type: "tag";
    _key: string;
  }>;
};

export type Hero25 = {
  _type: "hero-25";
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  tagLine?: string;
  title?: string;
  links?: Array<{
    _key: string;
  } & LinkIcon>;
  tags?: Array<{
    iconVariant?: "none" | "arrow-down-to-line" | "arrow-up-down" | "bell" | "blocks" | "building-2" | "chevron-right" | "chevron-left" | "chevron-down" | "chevron-up" | "check-circle-2" | "circle-dot" | "code" | "compass" | "external-link" | "git-branch" | "globe" | "home" | "infinity" | "landmark" | "layout-grid" | "list" | "lock" | "messages-square" | "move-right" | "play" | "play-circle" | "redo" | "repeat" | "scaling" | "scan" | "sparkles" | "star" | "trophy" | "timer" | "users" | "wand-sparkles" | "wrench" | "zap" | "zoom-in";
    title?: string;
    _type: "tag";
    _key: string;
  }>;
};

export type Hero13 = {
  _type: "hero-13";
  tag?: {
    iconVariant?: "none" | "arrow-down-to-line" | "arrow-up-down" | "bell" | "blocks" | "building-2" | "chevron-right" | "chevron-left" | "chevron-down" | "chevron-up" | "check-circle-2" | "circle-dot" | "code" | "compass" | "external-link" | "git-branch" | "globe" | "home" | "infinity" | "landmark" | "layout-grid" | "list" | "lock" | "messages-square" | "move-right" | "play" | "play-circle" | "redo" | "repeat" | "scaling" | "scan" | "sparkles" | "star" | "trophy" | "timer" | "users" | "wand-sparkles" | "wrench" | "zap" | "zoom-in";
    title?: string;
  };
  title?: string;
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      href?: string;
      target?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    title?: string;
    description?: string;
    _type: "alert";
    _key: string;
  } | {
    videoId?: string;
    _type: "youtube";
    _key: string;
  } | {
    _key: string;
  } & Code>;
  links?: Array<{
    _key: string;
  } & LinkIcon>;
};

export type Hero12 = {
  _type: "hero-12";
  backgroundImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  title?: string;
  body?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      href?: string;
      target?: boolean;
      _type: "link";
      _key: string;
    }>;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  } | {
    title?: string;
    description?: string;
    _type: "alert";
    _key: string;
  } | {
    videoId?: string;
    _type: "youtube";
    _key: string;
  } | {
    _key: string;
  } & Code>;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  links?: Array<{
    _key: string;
  } & LinkIcon>;
  tagLine?: string;
  techLogos?: Array<{
    title?: string;
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    link?: Link;
    _key: string;
  }>;
};

export type SectionHeader = {
  _type: "section-header";
  padding?: SectionPadding;
  sectionWidth?: "default" | "narrow";
  stackAlign?: "left" | "center";
  direction?: "column" | "row";
  tag?: {
    text?: string;
    type?: "title" | "badge";
  };
  title?: {
    text?: string;
    element?: "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "p" | "div";
    size?: "small" | "default" | "large";
    weight?: "normal" | "medium" | "semibold" | "bold";
  };
  description?: string;
  links?: Array<{
    _key: string;
  } & LinkIcon>;
};

export type SectionPadding = {
  _type: "section-padding";
  top?: boolean;
  bottom?: boolean;
};

export type ButtonVariant = "default" | "destructive" | "outline" | "secondary" | "ghost" | "link";

export type LinkGroup = {
  _type: "link-group";
  title?: string;
  links?: Array<{
    _key: string;
  } & LinkIcon>;
};

export type LinkIcon = {
  _type: "link-icon";
  iconVariant?: "none" | "arrow-down-to-line" | "arrow-up-down" | "bell" | "blocks" | "building-2" | "chevron-right" | "chevron-left" | "chevron-down" | "chevron-up" | "check-circle-2" | "circle-dot" | "code" | "compass" | "external-link" | "git-branch" | "globe" | "home" | "infinity" | "landmark" | "layout-grid" | "list" | "lock" | "messages-square" | "move-right" | "play" | "play-circle" | "redo" | "repeat" | "scaling" | "scan" | "sparkles" | "star" | "trophy" | "timer" | "users" | "wand-sparkles" | "wrench" | "zap" | "zoom-in";
  isExternal?: boolean;
  internalLink?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "page";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "post";
  };
  title?: string;
  description?: string;
  href?: string;
  target?: boolean;
  buttonVariant?: ButtonVariant;
};

export type BlockContent = Array<{
  children?: Array<{
    marks?: Array<string>;
    text?: string;
    _type: "span";
    _key: string;
  }>;
  style?: "normal" | "h1" | "h2" | "h3" | "h4" | "blockquote";
  listItem?: "bullet" | "number";
  markDefs?: Array<{
    isExternal?: boolean;
    internalLink?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "page";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "post";
    };
    href?: string;
    target?: boolean;
    _type: "link";
    _key: string;
  }>;
  level?: number;
  _type: "block";
  _key: string;
} | {
  asset?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
  };
  media?: unknown;
  hotspot?: SanityImageHotspot;
  crop?: SanityImageCrop;
  alt?: string;
  _type: "image";
  _key: string;
} | {
  title?: string;
  description?: string;
  _type: "alert";
  _key: string;
} | {
  videoId?: string;
  _type: "youtube";
  _key: string;
} | {
  _key: string;
} & Code>;

export type Contact = {
  _id: string;
  _type: "contact";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  tagline?: string;
  title?: string;
  description?: string;
  contactMethods?: Array<{
    icon?: "mail" | "messages" | "mapPin" | "phone";
    title?: string;
    description?: string;
    link?: Link;
    _key: string;
  }>;
  meta_title?: string;
  meta_description?: string;
  noindex?: boolean;
  ogImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type Settings = {
  _id: string;
  _type: "settings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  logo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    width?: number;
    height?: number;
    _type: "image";
  };
  siteName?: string;
  description?: string;
  copyright?: BlockContent;
};

export type Navigation = {
  _id: string;
  _type: "navigation";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  links?: Array<{
    _key: string;
  } & Link | {
    _key: string;
  } & LinkGroup>;
  orderRank?: string;
};

export type Testimonial = {
  _id: string;
  _type: "testimonial";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  company?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  text?: string;
  rating?: number;
  orderRank?: string;
};

export type Faq = {
  _id: string;
  _type: "faq";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  body?: BlockContent;
  orderRank?: string;
};

export type Category = {
  _id: string;
  _type: "category";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  orderRank?: string;
};

export type Page = {
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  blocks?: Array<{
    _key: string;
  } & SectionHeader | {
    _key: string;
  } & Hero12 | {
    _key: string;
  } & Hero13 | {
    _key: string;
  } & Hero25 | {
    _key: string;
  } & Hero57 | {
    _key: string;
  } & Hero85 | {
    _key: string;
  } & Hero160 | {
    _key: string;
  } & Hero174 | {
    _key: string;
  } & Faq1 | {
    _key: string;
  } & Faq5 | {
    _key: string;
  } & Faq8 | {
    _key: string;
  } & Faq9 | {
    _key: string;
  } & Faq14 | {
    _key: string;
  } & Logos1 | {
    _key: string;
  } & Logos4 | {
    _key: string;
  } & Logos9 | {
    _key: string;
  } & Feature1 | {
    _key: string;
  } & Feature3 | {
    _key: string;
  } & Feature12 | {
    _key: string;
  } & Feature15 | {
    _key: string;
  } & Feature66 | {
    _key: string;
  } & Feature117 | {
    _key: string;
  } & Feature157 | {
    _key: string;
  } & Feature202 | {
    _key: string;
  } & Blog4 | {
    _key: string;
  } & AllPosts4 | {
    _key: string;
  } & Blog7 | {
    _key: string;
  } & AllPosts7 | {
    _key: string;
  } & Blog13 | {
    _key: string;
  } & AllPosts13 | {
    _key: string;
  } & Blog14 | {
    _key: string;
  } & AllPosts14 | {
    _key: string;
  } & Blog16 | {
    _key: string;
  } & AllPosts16>;
  meta_title?: string;
  meta_description?: string;
  noindex?: boolean;
  ogImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  orderRank?: string;
};

export type Link = {
  _type: "link";
  isExternal?: boolean;
  internalLink?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "page";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "post";
  };
  title?: string;
  href?: string;
  target?: boolean;
  buttonVariant?: ButtonVariant;
};

export type Post = {
  _id: string;
  _type: "post";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  excerpt?: string;
  author?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "author";
  };
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  categories?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "category";
  }>;
  body?: BlockContent;
  meta_title?: string;
  meta_description?: string;
  noindex?: boolean;
  ogImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type Author = {
  _id: string;
  _type: "author";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  title?: string;
  slug?: Slug;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  orderRank?: string;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type MediaTag = {
  _id: string;
  _type: "media.tag";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: Slug;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type Code = {
  _type: "code";
  language?: string;
  filename?: string;
  code?: string;
  highlightedLines?: Array<number>;
};

export type AllSanitySchemaTypes = SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | SanityFileAsset | Geopoint | AllPosts16 | Blog16 | AllPosts14 | Blog14 | AllPosts13 | Blog13 | AllPosts7 | Blog7 | AllPosts4 | Blog4 | Feature202Card | Feature202 | Feature157Card | Feature157 | Feature117Card | Feature117 | Feature66Card | Feature66 | Feature15Card | Feature15 | Feature12Card | Feature12 | Feature3Card | Feature3 | FeatureImage | FeatureContent | Feature1 | Logos9 | Logos4 | Logos1 | Faq14 | Faq9 | Faq8 | Faq5 | Faq1 | Hero174 | Hero160 | Hero85 | Hero57 | Hero25 | Hero13 | Hero12 | SectionHeader | SectionPadding | ButtonVariant | LinkGroup | LinkIcon | BlockContent | Contact | Settings | Navigation | Testimonial | Faq | Category | Page | Link | Post | Author | SanityImageCrop | SanityImageHotspot | SanityImageAsset | SanityAssetSourceData | SanityImageMetadata | MediaTag | Slug | Code;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./app/sitemap.ts
// Variable: pagesQuery
// Query: *[_type == 'page'] | order(slug.current) {      'url': $baseUrl + select(slug.current == 'index' => '', '/' + slug.current),      'lastModified': _updatedAt,      'changeFrequency': 'daily',      'priority': select(        slug.current == 'index' => 1,        0.5      )    }
export type PagesQueryResult = Array<{
  url: unknown;
  lastModified: string;
  changeFrequency: "daily";
  priority: 0.5 | 1;
}>;
// Variable: postsQuery
// Query: *[_type == 'post'] | order(_updatedAt desc) {      'url': $baseUrl + '/blog/' + slug.current,      'lastModified': _updatedAt,      'changeFrequency': 'weekly',      'priority': 0.7    }
export type PostsQueryResult = Array<{
  url: unknown;
  lastModified: string;
  changeFrequency: "weekly";
  priority: 0.7;
}>;

// Source: ./sanity/queries/contact.ts
// Variable: CONTACT_QUERY
// Query: *[_type == "contact"][0]{  tagline,  title,  description,  contactMethods[]{    icon,    title,    description,    link {          _key,    ...,    "href": select(      isExternal => href,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    }  },  meta_title,  meta_description,  noindex,  ogImage {    asset->{      _id,      url,      metadata {        dimensions {          width,          height        }      }    },  }}
export type CONTACT_QUERYResult = {
  tagline: string | null;
  title: string | null;
  description: string | null;
  contactMethods: Array<{
    icon: "mail" | "mapPin" | "messages" | "phone" | null;
    title: string | null;
    description: string | null;
    link: {
      _key: null;
      _type: "link";
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      title?: string;
      href: string | "/" | null;
      target?: boolean;
      buttonVariant?: ButtonVariant;
    } | null;
  }> | null;
  meta_title: string | null;
  meta_description: string | null;
  noindex: boolean | null;
  ogImage: {
    asset: {
      _id: string;
      url: string | null;
      metadata: {
        dimensions: {
          width: number | null;
          height: number | null;
        } | null;
      } | null;
    } | null;
  } | null;
} | null;

// Source: ./sanity/queries/navigation.ts
// Variable: NAVIGATION_QUERY
// Query: *[_type == "navigation"]{    _type,    _key,    title,    links[]{          _key,    ...,    "href": select(      isExternal => href,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    ),      _type == "link-group" => {        links[]{              _key,    ...,    "href": select(      isExternal => href,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )        }      }    }  }
export type NAVIGATION_QUERYResult = Array<{
  _type: "navigation";
  _key: null;
  title: string | null;
  links: Array<{
    _key: string;
    _type: "link-group";
    title?: string;
    links: Array<{
      _key: string;
      _type: "link-icon";
      iconVariant?: "arrow-down-to-line" | "arrow-up-down" | "bell" | "blocks" | "building-2" | "check-circle-2" | "chevron-down" | "chevron-left" | "chevron-right" | "chevron-up" | "circle-dot" | "code" | "compass" | "external-link" | "git-branch" | "globe" | "home" | "infinity" | "landmark" | "layout-grid" | "list" | "lock" | "messages-square" | "move-right" | "none" | "play-circle" | "play" | "redo" | "repeat" | "scaling" | "scan" | "sparkles" | "star" | "timer" | "trophy" | "users" | "wand-sparkles" | "wrench" | "zap" | "zoom-in";
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      title?: string;
      description?: string;
      href: string | "/" | null;
      target?: boolean;
      buttonVariant?: ButtonVariant;
    }> | null;
    href: null;
  } | {
    _key: string;
    _type: "link";
    isExternal?: boolean;
    internalLink?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "page";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "post";
    };
    title?: string;
    href: string | "/" | null;
    target?: boolean;
    buttonVariant?: ButtonVariant;
  }> | null;
}>;

// Source: ./sanity/queries/page.ts
// Variable: PAGE_QUERY
// Query: *[_type == "page" && slug.current == $slug][0]{    blocks[]{        _type == "section-header" => {    _type,    _key,    padding,    sectionWidth,    stackAlign,    direction,    tag,    title,    description,    links[]{          _key,    ...,    "href": select(      isExternal => href,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    },  },        _type == "hero-12" => {    _type,    _key,    backgroundImage{      asset->{        _id,        url,        mimeType,        metadata {          lqip,          dimensions {            width,            height          }        }      },      alt    },    tagLine,    title,    body[]{      ...,      markDefs[]{        ...,        _type == "link" => {              _key,    ...,    "href": select(      isExternal => href,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )        }      },      _type == "image" => {        ...,        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        }      }    },    image{      asset->{        _id,        url,        mimeType,        metadata {          lqip,          dimensions {            width,            height          }        }      },      alt    },    links[]{          _key,    ...,    "href": select(      isExternal => href,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    },    techLogos[]{      _key,      title,      link,      image{        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        },        alt      }    }  },        _type == "hero-13" => {    _type,    _key,    tag,    title,    body[]{      ...,      markDefs[]{        ...,        _type == "link" => {              _key,    ...,    "href": select(      isExternal => href,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )        }      },      _type == "image" => {        ...,        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        }      }    },    links[]{          _key,    ...,    "href": select(      isExternal => href,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    },  },        _type == "hero-25" => {    _type,    _key,    tagLine,    title,    image{      asset->{        _id,        url,        mimeType,        metadata {          lqip,          dimensions {            width,            height          }        }      },      alt    },    links[]{          _key,    ...,    "href": select(      isExternal => href,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    },    tags  },        _type == "hero-57" => {    _type,    _key,    title,    body,    links[]{          _key,    ...,    "href": select(      isExternal => href,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    },    tags  },        _type == "hero-85" => {    _type,    _key,    tag{      title,      description    },    title,    body[]{      ...,      markDefs[]{        ...,        _type == "link" => {              _key,    ...,    "href": select(      isExternal => href,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )        }      },      _type == "image" => {        ...,        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        }      }    },    images[]{      asset->{        _id,        url,        mimeType,        metadata {          lqip,          dimensions {            width,            height          }        }      },      alt    },    links[]{          _key,    ...,    "href": select(      isExternal => href,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    },  },        _type == "hero-160" => {    _type,    _key,    backgroundImage{      asset->{        _id,        url,        mimeType,        metadata {          lqip,          dimensions {            width,            height          }        }      },      alt    },    tag,    title,    body[]{      ...,      markDefs[]{        ...,        _type == "link" => {              _key,    ...,    "href": select(      isExternal => href,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )        }      },      _type == "image" => {        ...,        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        }      }    },    links[]{          _key,    ...,    "href": select(      isExternal => href,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    },    image{      asset->{        _id,        url,        mimeType,        metadata {          lqip,          dimensions {            width,            height          }        }      },      alt    },  },        _type == "hero-174" => {    _type,    _key,    backgroundImage{      asset->{        _id,        url,        mimeType,        metadata {          lqip,          dimensions {            width,            height          }        }      },      alt    },    title,    body[]{      ...,      markDefs[]{        ...,        _type == "link" => {              _key,    ...,    "href": select(      isExternal => href,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )        }      },      _type == "image" => {        ...,        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        }      }    },    links[]{          _key,    ...,    "href": select(      isExternal => href,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    },    tag  },        _type == "faq-1" => {    _type,    _key,    padding,    faqs[]->{      _id,      title,      body[]{        ...,        markDefs[]{          ...,          _type == "link" => {                _key,    ...,    "href": select(      isExternal => href,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )          }        },        _type == "image" => {          ...,          asset->{            _id,            url,            mimeType,            metadata {              lqip,              dimensions {                width,                height              }            }          }        }      },    },  },        _type == "faq-5" => {    _type,    _key,    padding,    faqs[]->{      _id,      title,      body[]{        ...,        markDefs[]{          ...,          _type == "link" => {                _key,    ...,    "href": select(      isExternal => href,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )          }        },        _type == "image" => {          ...,          asset->{            _id,            url,            mimeType,            metadata {              lqip,              dimensions {                width,                height              }            }          }        }      },    },  },        _type == "faq-8" => {    _type,    _key,    padding,    sections[]{      _type,      _key,      title,      faqs[]->{        _id,        title,        body[]{          ...,          markDefs[]{            ...,            _type == "link" => {                  _key,    ...,    "href": select(      isExternal => href,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )            }          },          _type == "image" => {            ...,            asset->{              _id,              url,              mimeType,              metadata {                lqip,                dimensions {                  width,                  height                }              }            }          }        }      }    }  },        _type == "faq-9" => {    _type,    _key,    padding,    faqs[]->{      _id,      title,      body[]{        ...,        markDefs[]{          ...,          _type == "link" => {                _key,    ...,    "href": select(      isExternal => href,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )          }        },        _type == "image" => {          ...,          asset->{            _id,            url,            mimeType,            metadata {              lqip,              dimensions {                width,                height              }            }          }        }      },    },  },        _type == "faq-14" => {    _type,    _key,    padding,    title,    description,    sections[]{      _type,      _key,      title,      faqs[]->{        _id,        title,        body[]{          ...,          markDefs[]{            ...,            _type == "link" => {                  _key,    ...,    "href": select(      isExternal => href,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )            }          },          _type == "image" => {            ...,            asset->{              _id,              url,              mimeType,              metadata {                lqip,                dimensions {                  width,                  height                }              }            }          }        }      }    }  },        _type == "logos-1" => {    _type,    _key,    padding,    title,    images[]{      ...,      asset->{        _id,        url,        mimeType,        metadata {          lqip,          dimensions {            width,            height          }        }      },      alt    },  },        _type == "logos-4" => {    _type,    _key,    padding,    images[]{      ...,      asset->{        _id,        url,        mimeType,        metadata {          lqip,          dimensions {            width,            height          }        }      },      alt    },  },        _type == "logos-9" => {    _type,    _key,    padding,    title,    images[]{      ...,      asset->{        _id,        url,        mimeType,        metadata {          lqip,          dimensions {            width,            height          }        }      },      alt    },    testimonials[]->{      ...,      image{        ...,        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        },        alt      },    }  },        _type == "feature-1" => {    _type,    _key,    padding,    columns[]{        _type == "feature-content" => {    _type,    _key,    padding,    iconVariant,    tag,    title,    body[]{      ...,      markDefs[]{        ...,        _type == "link" => {              _key,    ...,    "href": select(      isExternal => href,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )        }      },      _type == "image" => {        ...,        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        }      }    },    links[]{          _key,    ...,    "href": select(      isExternal => href,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    },  },        _type == "feature-image" => {    _type,    _key,    image{      asset->{        _id,        url,        mimeType,        metadata {          lqip,          dimensions {            width,            height          }        }      },      alt    },  },    },  },        _type == "feature-3" => {    _type,    _key,    padding,    columns[]{        _type == "feature-3-card" => {    _type,    _key,    iconVariant,    title,    description,    image{      asset->{        _id,        url,        mimeType,        metadata {          lqip,          dimensions {            width,            height          }        }      },      alt    }  },    },  },        _type == "feature-12" => {    _type,    _key,    padding,    tagline,    columns[]{        _type == "feature-12-card" => {    _type,    _key,    iconVariant,    title,    description,  },    },  },        _type == "feature-15" => {    _type,    _key,    padding,    gridColumns,    columns[]{        _type == "feature-15-card" => {    _type,    _key,    iconVariant,    title,    description,  },    },  },        _type == "feature-66" => {    _type,    _key,    padding,    columns[]{        _type == "feature-66-card" => {    _type,    _key,    logo{      asset->{        _id,        url,        mimeType,        metadata {          lqip,          dimensions {            width,            height          }        }      },      alt    },    image{      asset->{        _id,        url,        mimeType,        metadata {          lqip,          dimensions {            width,            height          }        }      },      alt    },    link {          _key,    ...,    "href": select(      isExternal => href,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    }  },    },  },        _type == "feature-117" => {    _type,    _key,    padding,    columns[]{        _type == "feature-117-card" => {    _type,    _key,    tag,    title,    image{      asset->{        _id,        url,        mimeType,        metadata {          lqip,          dimensions {            width,            height          }        }      },      alt    },    link {          _key,    ...,    "href": select(      isExternal => href,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    }  },    },  },        _type == "feature-157" => {    _type,    _key,    padding,    columns[]{        _type == "feature-157-card" => {    _type,    _key,    image{      asset->{        _id,        url,        mimeType,        metadata {          lqip,          dimensions {            width,            height          }        }      },      alt    },    link {          _key,    ...,    "href": select(      isExternal => href,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    }  },    },  },        _type == "feature-202" => {    _type,    _key,    padding,    columns[]{        _type == "feature-202-card" => {    _type,    _key,    iconVariant,    title,    description,    image{      asset->{        _id,        url,        mimeType,        metadata {          lqip,          dimensions {            width,            height          }        }      },      alt    },    link {          _key,    ...,    "href": select(      isExternal => href,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )    }  },    },  },        _type == "blog-4" => {    _type,    _key,    padding,    gridColumns,    posts[]->{      _id,      _createdAt,      title,      slug,      excerpt,      image{        ...,        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        },        alt      },      categories[]->{        _id,        title,      },      author->{        _id,        name,        image{          ...,          asset->{            _id,            url,            mimeType,            metadata {              lqip,              dimensions {                width,                height              }            }          },        }      }    },  },        _type == "all-posts-4" => {    _type,    _key,    padding  },        _type == "blog-7" => {    _type,    _key,    padding,    gridColumns,    posts[]->{      _id,      _createdAt,      title,      slug,      excerpt,      image{        ...,        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        },        alt      },    },  },        _type == "all-posts-7" => {    _type,    _key,    padding  },        _type == "blog-13" => {    _type,    _key,    padding,    gridColumns,    posts[]->{      _id,      _createdAt,      title,      slug,      image{        ...,        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        },        alt      },      categories[]->{        _id,        title,      },    },  },        _type == "all-posts-13" => {    _type,    _key,    padding  },        _type == "blog-14" => {    _type,    _key,    padding,    gridColumns,    title,    posts[]->{      _id,      _createdAt,      title,      slug,      excerpt,      image{        ...,        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        },        alt      },      categories[]->{        _id,        title,      },      author->{        _id,        name,        image{          ...,          asset->{            _id,            url,            mimeType,            metadata {              lqip,              dimensions {                width,                height              }            }          },        }      }    },  },        _type == "all-posts-14" => {    _type,    _key,    padding  },        _type == "blog-16" => {    _type,    _key,    padding,    posts[]->{      _id,      _createdAt,      title,      slug,      categories[]->{        _id,        title,      },      author->{        _id,        name,        title,        image{          ...,          asset->{            _id,            url,            mimeType,            metadata {              lqip,              dimensions {                width,                height              }            }          },        }      }    },  },        _type == "all-posts-16" => {    _type,    _key,    padding  },    },    meta_title,    meta_description,    noindex,    ogImage {      asset->{        _id,        url,        metadata {          dimensions {            width,            height          }        }      },    }  }
export type PAGE_QUERYResult = {
  blocks: Array<{
    _type: "all-posts-13";
    _key: string;
    padding: SectionPadding | null;
  } | {
    _type: "all-posts-14";
    _key: string;
    padding: SectionPadding | null;
  } | {
    _type: "all-posts-16";
    _key: string;
    padding: SectionPadding | null;
  } | {
    _type: "all-posts-4";
    _key: string;
    padding: SectionPadding | null;
  } | {
    _type: "all-posts-7";
    _key: string;
    padding: SectionPadding | null;
  } | {
    _type: "blog-13";
    _key: string;
    padding: SectionPadding | null;
    gridColumns: "grid-cols-2" | "grid-cols-3" | null;
    posts: Array<{
      _id: string;
      _createdAt: string;
      title: string | null;
      slug: Slug | null;
      image: {
        asset: {
          _id: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt: string | null;
        _type: "image";
      } | null;
      categories: Array<{
        _id: string;
        title: string | null;
      }> | null;
    }> | null;
  } | {
    _type: "blog-14";
    _key: string;
    padding: SectionPadding | null;
    gridColumns: "grid-cols-2" | "grid-cols-3" | null;
    title: string | null;
    posts: Array<{
      _id: string;
      _createdAt: string;
      title: string | null;
      slug: Slug | null;
      excerpt: string | null;
      image: {
        asset: {
          _id: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt: string | null;
        _type: "image";
      } | null;
      categories: Array<{
        _id: string;
        title: string | null;
      }> | null;
      author: {
        _id: string;
        name: string | null;
        image: {
          asset: {
            _id: string;
            url: string | null;
            mimeType: string | null;
            metadata: {
              lqip: string | null;
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
        } | null;
      } | null;
    }> | null;
  } | {
    _type: "blog-16";
    _key: string;
    padding: SectionPadding | null;
    posts: Array<{
      _id: string;
      _createdAt: string;
      title: string | null;
      slug: Slug | null;
      categories: Array<{
        _id: string;
        title: string | null;
      }> | null;
      author: {
        _id: string;
        name: string | null;
        title: string | null;
        image: {
          asset: {
            _id: string;
            url: string | null;
            mimeType: string | null;
            metadata: {
              lqip: string | null;
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
        } | null;
      } | null;
    }> | null;
  } | {
    _type: "blog-4";
    _key: string;
    padding: SectionPadding | null;
    gridColumns: "grid-cols-2" | "grid-cols-3" | null;
    posts: Array<{
      _id: string;
      _createdAt: string;
      title: string | null;
      slug: Slug | null;
      excerpt: string | null;
      image: {
        asset: {
          _id: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt: string | null;
        _type: "image";
      } | null;
      categories: Array<{
        _id: string;
        title: string | null;
      }> | null;
      author: {
        _id: string;
        name: string | null;
        image: {
          asset: {
            _id: string;
            url: string | null;
            mimeType: string | null;
            metadata: {
              lqip: string | null;
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
        } | null;
      } | null;
    }> | null;
  } | {
    _type: "blog-7";
    _key: string;
    padding: SectionPadding | null;
    gridColumns: "grid-cols-2" | "grid-cols-3" | null;
    posts: Array<{
      _id: string;
      _createdAt: string;
      title: string | null;
      slug: Slug | null;
      excerpt: string | null;
      image: {
        asset: {
          _id: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt: string | null;
        _type: "image";
      } | null;
    }> | null;
  } | {
    _type: "faq-1";
    _key: string;
    padding: SectionPadding | null;
    faqs: Array<{
      _id: string;
      title: string | null;
      body: Array<{
        title?: string;
        description?: string;
        _type: "alert";
        _key: string;
        markDefs: null;
      } | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs: Array<{
          isExternal?: boolean;
          internalLink?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "page";
          } | {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "post";
          };
          href: string | "/" | null;
          target?: boolean;
          _type: "link";
          _key: string;
        }> | null;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        _key: string;
        _type: "code";
        language?: string;
        filename?: string;
        code?: string;
        highlightedLines?: Array<number>;
        markDefs: null;
      } | {
        asset: {
          _id: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
        markDefs: null;
      } | {
        videoId?: string;
        _type: "youtube";
        _key: string;
        markDefs: null;
      }> | null;
    }> | null;
  } | {
    _type: "faq-14";
    _key: string;
    padding: SectionPadding | null;
    title: {
      text?: string;
      element?: "div" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "p";
      size?: "default" | "large" | "small";
      weight?: "bold" | "medium" | "normal" | "semibold";
    } | null;
    description: string | null;
    sections: Array<{
      _type: "faqSection";
      _key: string;
      title: string | null;
      faqs: Array<{
        _id: string;
        title: string | null;
        body: Array<{
          title?: string;
          description?: string;
          _type: "alert";
          _key: string;
          markDefs: null;
        } | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet" | "number";
          markDefs: Array<{
            isExternal?: boolean;
            internalLink?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "page";
            } | {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "post";
            };
            href: string | "/" | null;
            target?: boolean;
            _type: "link";
            _key: string;
          }> | null;
          level?: number;
          _type: "block";
          _key: string;
        } | {
          _key: string;
          _type: "code";
          language?: string;
          filename?: string;
          code?: string;
          highlightedLines?: Array<number>;
          markDefs: null;
        } | {
          asset: {
            _id: string;
            url: string | null;
            mimeType: string | null;
            metadata: {
              lqip: string | null;
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
          markDefs: null;
        } | {
          videoId?: string;
          _type: "youtube";
          _key: string;
          markDefs: null;
        }> | null;
      }> | null;
    }> | null;
  } | {
    _type: "faq-5";
    _key: string;
    padding: SectionPadding | null;
    faqs: Array<{
      _id: string;
      title: string | null;
      body: Array<{
        title?: string;
        description?: string;
        _type: "alert";
        _key: string;
        markDefs: null;
      } | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs: Array<{
          isExternal?: boolean;
          internalLink?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "page";
          } | {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "post";
          };
          href: string | "/" | null;
          target?: boolean;
          _type: "link";
          _key: string;
        }> | null;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        _key: string;
        _type: "code";
        language?: string;
        filename?: string;
        code?: string;
        highlightedLines?: Array<number>;
        markDefs: null;
      } | {
        asset: {
          _id: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
        markDefs: null;
      } | {
        videoId?: string;
        _type: "youtube";
        _key: string;
        markDefs: null;
      }> | null;
    }> | null;
  } | {
    _type: "faq-8";
    _key: string;
    padding: SectionPadding | null;
    sections: Array<{
      _type: "faqSection";
      _key: string;
      title: string | null;
      faqs: Array<{
        _id: string;
        title: string | null;
        body: Array<{
          title?: string;
          description?: string;
          _type: "alert";
          _key: string;
          markDefs: null;
        } | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet" | "number";
          markDefs: Array<{
            isExternal?: boolean;
            internalLink?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "page";
            } | {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "post";
            };
            href: string | "/" | null;
            target?: boolean;
            _type: "link";
            _key: string;
          }> | null;
          level?: number;
          _type: "block";
          _key: string;
        } | {
          _key: string;
          _type: "code";
          language?: string;
          filename?: string;
          code?: string;
          highlightedLines?: Array<number>;
          markDefs: null;
        } | {
          asset: {
            _id: string;
            url: string | null;
            mimeType: string | null;
            metadata: {
              lqip: string | null;
              dimensions: {
                width: number | null;
                height: number | null;
              } | null;
            } | null;
          } | null;
          media?: unknown;
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          alt?: string;
          _type: "image";
          _key: string;
          markDefs: null;
        } | {
          videoId?: string;
          _type: "youtube";
          _key: string;
          markDefs: null;
        }> | null;
      }> | null;
    }> | null;
  } | {
    _type: "faq-9";
    _key: string;
    padding: SectionPadding | null;
    faqs: Array<{
      _id: string;
      title: string | null;
      body: Array<{
        title?: string;
        description?: string;
        _type: "alert";
        _key: string;
        markDefs: null;
      } | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs: Array<{
          isExternal?: boolean;
          internalLink?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "page";
          } | {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "post";
          };
          href: string | "/" | null;
          target?: boolean;
          _type: "link";
          _key: string;
        }> | null;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        _key: string;
        _type: "code";
        language?: string;
        filename?: string;
        code?: string;
        highlightedLines?: Array<number>;
        markDefs: null;
      } | {
        asset: {
          _id: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
        markDefs: null;
      } | {
        videoId?: string;
        _type: "youtube";
        _key: string;
        markDefs: null;
      }> | null;
    }> | null;
  } | {
    _type: "feature-1";
    _key: string;
    padding: SectionPadding | null;
    columns: Array<{
      _type: "feature-content";
      _key: string;
      padding: SectionPadding | null;
      iconVariant: "arrow-down-to-line" | "arrow-up-down" | "bell" | "blocks" | "building-2" | "check-circle-2" | "chevron-down" | "chevron-left" | "chevron-right" | "chevron-up" | "circle-dot" | "code" | "compass" | "external-link" | "git-branch" | "globe" | "home" | "infinity" | "landmark" | "layout-grid" | "list" | "lock" | "messages-square" | "move-right" | "none" | "play-circle" | "play" | "redo" | "repeat" | "scaling" | "scan" | "sparkles" | "star" | "timer" | "trophy" | "users" | "wand-sparkles" | "wrench" | "zap" | "zoom-in" | null;
      tag: {
        text?: string;
        type?: "badge" | "title";
      } | null;
      title: string | null;
      body: Array<{
        title?: string;
        description?: string;
        _type: "alert";
        _key: string;
        markDefs: null;
      } | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs: Array<{
          isExternal?: boolean;
          internalLink?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "page";
          } | {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "post";
          };
          href: string | "/" | null;
          target?: boolean;
          _type: "link";
          _key: string;
        }> | null;
        level?: number;
        _type: "block";
        _key: string;
      } | {
        _key: string;
        _type: "code";
        language?: string;
        filename?: string;
        code?: string;
        highlightedLines?: Array<number>;
        markDefs: null;
      } | {
        asset: {
          _id: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt?: string;
        _type: "image";
        _key: string;
        markDefs: null;
      } | {
        videoId?: string;
        _type: "youtube";
        _key: string;
        markDefs: null;
      }> | null;
      links: Array<{
        _key: string;
        _type: "link";
        isExternal?: boolean;
        internalLink?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        } | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "post";
        };
        title?: string;
        href: string | "/" | null;
        target?: boolean;
        buttonVariant?: ButtonVariant;
      }> | null;
    } | {
      _type: "feature-image";
      _key: string;
      image: {
        asset: {
          _id: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
    }> | null;
  } | {
    _type: "feature-117";
    _key: string;
    padding: SectionPadding | null;
    columns: Array<{
      _type: "feature-117-card";
      _key: string;
      tag: {
        iconVariant?: "arrow-down-to-line" | "arrow-up-down" | "bell" | "blocks" | "building-2" | "check-circle-2" | "chevron-down" | "chevron-left" | "chevron-right" | "chevron-up" | "circle-dot" | "code" | "compass" | "external-link" | "git-branch" | "globe" | "home" | "infinity" | "landmark" | "layout-grid" | "list" | "lock" | "messages-square" | "move-right" | "none" | "play-circle" | "play" | "redo" | "repeat" | "scaling" | "scan" | "sparkles" | "star" | "timer" | "trophy" | "users" | "wand-sparkles" | "wrench" | "zap" | "zoom-in";
        text?: string;
      } | null;
      title: string | null;
      image: {
        asset: {
          _id: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      link: {
        _key: null;
        _type: "link";
        isExternal?: boolean;
        internalLink?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        } | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "post";
        };
        title?: string;
        href: string | "/" | null;
        target?: boolean;
        buttonVariant?: ButtonVariant;
      } | null;
    }> | null;
  } | {
    _type: "feature-12";
    _key: string;
    padding: SectionPadding | null;
    tagline: string | null;
    columns: Array<{
      _type: "feature-12-card";
      _key: string;
      iconVariant: "arrow-down-to-line" | "arrow-up-down" | "bell" | "blocks" | "building-2" | "check-circle-2" | "chevron-down" | "chevron-left" | "chevron-right" | "chevron-up" | "circle-dot" | "code" | "compass" | "external-link" | "git-branch" | "globe" | "home" | "infinity" | "landmark" | "layout-grid" | "list" | "lock" | "messages-square" | "move-right" | "none" | "play-circle" | "play" | "redo" | "repeat" | "scaling" | "scan" | "sparkles" | "star" | "timer" | "trophy" | "users" | "wand-sparkles" | "wrench" | "zap" | "zoom-in" | null;
      title: string | null;
      description: string | null;
    }> | null;
  } | {
    _type: "feature-15";
    _key: string;
    padding: SectionPadding | null;
    gridColumns: "grid-cols-2" | "grid-cols-3" | null;
    columns: Array<{
      _type: "feature-15-card";
      _key: string;
      iconVariant: "arrow-down-to-line" | "arrow-up-down" | "bell" | "blocks" | "building-2" | "check-circle-2" | "chevron-down" | "chevron-left" | "chevron-right" | "chevron-up" | "circle-dot" | "code" | "compass" | "external-link" | "git-branch" | "globe" | "home" | "infinity" | "landmark" | "layout-grid" | "list" | "lock" | "messages-square" | "move-right" | "none" | "play-circle" | "play" | "redo" | "repeat" | "scaling" | "scan" | "sparkles" | "star" | "timer" | "trophy" | "users" | "wand-sparkles" | "wrench" | "zap" | "zoom-in" | null;
      title: string | null;
      description: string | null;
    }> | null;
  } | {
    _type: "feature-157";
    _key: string;
    padding: SectionPadding | null;
    columns: Array<{
      _type: "feature-157-card";
      _key: string;
      image: {
        asset: {
          _id: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      link: {
        _key: null;
        _type: "link-icon";
        iconVariant?: "arrow-down-to-line" | "arrow-up-down" | "bell" | "blocks" | "building-2" | "check-circle-2" | "chevron-down" | "chevron-left" | "chevron-right" | "chevron-up" | "circle-dot" | "code" | "compass" | "external-link" | "git-branch" | "globe" | "home" | "infinity" | "landmark" | "layout-grid" | "list" | "lock" | "messages-square" | "move-right" | "none" | "play-circle" | "play" | "redo" | "repeat" | "scaling" | "scan" | "sparkles" | "star" | "timer" | "trophy" | "users" | "wand-sparkles" | "wrench" | "zap" | "zoom-in";
        isExternal?: boolean;
        internalLink?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        } | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "post";
        };
        title?: string;
        description?: string;
        href: string | "/" | null;
        target?: boolean;
        buttonVariant?: ButtonVariant;
      } | null;
    }> | null;
  } | {
    _type: "feature-202";
    _key: string;
    padding: SectionPadding | null;
    columns: Array<{
      _type: "feature-202-card";
      _key: string;
      iconVariant: "arrow-down-to-line" | "arrow-up-down" | "bell" | "blocks" | "building-2" | "check-circle-2" | "chevron-down" | "chevron-left" | "chevron-right" | "chevron-up" | "circle-dot" | "code" | "compass" | "external-link" | "git-branch" | "globe" | "home" | "infinity" | "landmark" | "layout-grid" | "list" | "lock" | "messages-square" | "move-right" | "none" | "play-circle" | "play" | "redo" | "repeat" | "scaling" | "scan" | "sparkles" | "star" | "timer" | "trophy" | "users" | "wand-sparkles" | "wrench" | "zap" | "zoom-in" | null;
      title: string | null;
      description: string | null;
      image: {
        asset: {
          _id: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      link: {
        _key: null;
        _type: "link";
        isExternal?: boolean;
        internalLink?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        } | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "post";
        };
        title?: string;
        href: string | "/" | null;
        target?: boolean;
        buttonVariant?: ButtonVariant;
      } | null;
    }> | null;
  } | {
    _type: "feature-3";
    _key: string;
    padding: SectionPadding | null;
    columns: Array<{
      _type: "feature-3-card";
      _key: string;
      iconVariant: "arrow-down-to-line" | "arrow-up-down" | "bell" | "blocks" | "building-2" | "check-circle-2" | "chevron-down" | "chevron-left" | "chevron-right" | "chevron-up" | "circle-dot" | "code" | "compass" | "external-link" | "git-branch" | "globe" | "home" | "infinity" | "landmark" | "layout-grid" | "list" | "lock" | "messages-square" | "move-right" | "none" | "play-circle" | "play" | "redo" | "repeat" | "scaling" | "scan" | "sparkles" | "star" | "timer" | "trophy" | "users" | "wand-sparkles" | "wrench" | "zap" | "zoom-in" | null;
      title: string | null;
      description: string | null;
      image: {
        asset: {
          _id: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
    }> | null;
  } | {
    _type: "feature-66";
    _key: string;
    padding: SectionPadding | null;
    columns: Array<{
      _type: "feature-66-card";
      _key: string;
      logo: {
        asset: {
          _id: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      image: {
        asset: {
          _id: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
      link: {
        _key: null;
        _type: "link";
        isExternal?: boolean;
        internalLink?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        } | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "post";
        };
        title?: string;
        href: string | "/" | null;
        target?: boolean;
        buttonVariant?: ButtonVariant;
      } | null;
    }> | null;
  } | {
    _type: "hero-12";
    _key: string;
    backgroundImage: {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      alt: string | null;
    } | null;
    tagLine: string | null;
    title: string | null;
    body: Array<{
      title?: string;
      description?: string;
      _type: "alert";
      _key: string;
      markDefs: null;
    } | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet" | "number";
      markDefs: Array<{
        isExternal?: boolean;
        internalLink?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        } | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "post";
        };
        href: string | "/" | null;
        target?: boolean;
        _type: "link";
        _key: string;
      }> | null;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      _key: string;
      _type: "code";
      language?: string;
      filename?: string;
      code?: string;
      highlightedLines?: Array<number>;
      markDefs: null;
    } | {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
      markDefs: null;
    } | {
      videoId?: string;
      _type: "youtube";
      _key: string;
      markDefs: null;
    }> | null;
    image: {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      alt: string | null;
    } | null;
    links: Array<{
      _key: string;
      _type: "link-icon";
      iconVariant?: "arrow-down-to-line" | "arrow-up-down" | "bell" | "blocks" | "building-2" | "check-circle-2" | "chevron-down" | "chevron-left" | "chevron-right" | "chevron-up" | "circle-dot" | "code" | "compass" | "external-link" | "git-branch" | "globe" | "home" | "infinity" | "landmark" | "layout-grid" | "list" | "lock" | "messages-square" | "move-right" | "none" | "play-circle" | "play" | "redo" | "repeat" | "scaling" | "scan" | "sparkles" | "star" | "timer" | "trophy" | "users" | "wand-sparkles" | "wrench" | "zap" | "zoom-in";
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      title?: string;
      description?: string;
      href: string | "/" | null;
      target?: boolean;
      buttonVariant?: ButtonVariant;
    }> | null;
    techLogos: Array<{
      _key: string;
      title: string | null;
      link: Link | null;
      image: {
        asset: {
          _id: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        alt: string | null;
      } | null;
    }> | null;
  } | {
    _type: "hero-13";
    _key: string;
    tag: {
      iconVariant?: "arrow-down-to-line" | "arrow-up-down" | "bell" | "blocks" | "building-2" | "check-circle-2" | "chevron-down" | "chevron-left" | "chevron-right" | "chevron-up" | "circle-dot" | "code" | "compass" | "external-link" | "git-branch" | "globe" | "home" | "infinity" | "landmark" | "layout-grid" | "list" | "lock" | "messages-square" | "move-right" | "none" | "play-circle" | "play" | "redo" | "repeat" | "scaling" | "scan" | "sparkles" | "star" | "timer" | "trophy" | "users" | "wand-sparkles" | "wrench" | "zap" | "zoom-in";
      title?: string;
    } | null;
    title: string | null;
    body: Array<{
      title?: string;
      description?: string;
      _type: "alert";
      _key: string;
      markDefs: null;
    } | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet" | "number";
      markDefs: Array<{
        isExternal?: boolean;
        internalLink?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        } | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "post";
        };
        href: string | "/" | null;
        target?: boolean;
        _type: "link";
        _key: string;
      }> | null;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      _key: string;
      _type: "code";
      language?: string;
      filename?: string;
      code?: string;
      highlightedLines?: Array<number>;
      markDefs: null;
    } | {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
      markDefs: null;
    } | {
      videoId?: string;
      _type: "youtube";
      _key: string;
      markDefs: null;
    }> | null;
    links: Array<{
      _key: string;
      _type: "link-icon";
      iconVariant?: "arrow-down-to-line" | "arrow-up-down" | "bell" | "blocks" | "building-2" | "check-circle-2" | "chevron-down" | "chevron-left" | "chevron-right" | "chevron-up" | "circle-dot" | "code" | "compass" | "external-link" | "git-branch" | "globe" | "home" | "infinity" | "landmark" | "layout-grid" | "list" | "lock" | "messages-square" | "move-right" | "none" | "play-circle" | "play" | "redo" | "repeat" | "scaling" | "scan" | "sparkles" | "star" | "timer" | "trophy" | "users" | "wand-sparkles" | "wrench" | "zap" | "zoom-in";
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      title?: string;
      description?: string;
      href: string | "/" | null;
      target?: boolean;
      buttonVariant?: ButtonVariant;
    }> | null;
  } | {
    _type: "hero-160";
    _key: string;
    backgroundImage: {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      alt: string | null;
    } | null;
    tag: {
      iconVariant?: "arrow-down-to-line" | "arrow-up-down" | "bell" | "blocks" | "building-2" | "check-circle-2" | "chevron-down" | "chevron-left" | "chevron-right" | "chevron-up" | "circle-dot" | "code" | "compass" | "external-link" | "git-branch" | "globe" | "home" | "infinity" | "landmark" | "layout-grid" | "list" | "lock" | "messages-square" | "move-right" | "none" | "play-circle" | "play" | "redo" | "repeat" | "scaling" | "scan" | "sparkles" | "star" | "timer" | "trophy" | "users" | "wand-sparkles" | "wrench" | "zap" | "zoom-in";
      title?: string;
    } | null;
    title: string | null;
    body: Array<{
      title?: string;
      description?: string;
      _type: "alert";
      _key: string;
      markDefs: null;
    } | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet" | "number";
      markDefs: Array<{
        isExternal?: boolean;
        internalLink?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        } | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "post";
        };
        href: string | "/" | null;
        target?: boolean;
        _type: "link";
        _key: string;
      }> | null;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      _key: string;
      _type: "code";
      language?: string;
      filename?: string;
      code?: string;
      highlightedLines?: Array<number>;
      markDefs: null;
    } | {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
      markDefs: null;
    } | {
      videoId?: string;
      _type: "youtube";
      _key: string;
      markDefs: null;
    }> | null;
    links: Array<{
      _key: string;
      _type: "link-icon";
      iconVariant?: "arrow-down-to-line" | "arrow-up-down" | "bell" | "blocks" | "building-2" | "check-circle-2" | "chevron-down" | "chevron-left" | "chevron-right" | "chevron-up" | "circle-dot" | "code" | "compass" | "external-link" | "git-branch" | "globe" | "home" | "infinity" | "landmark" | "layout-grid" | "list" | "lock" | "messages-square" | "move-right" | "none" | "play-circle" | "play" | "redo" | "repeat" | "scaling" | "scan" | "sparkles" | "star" | "timer" | "trophy" | "users" | "wand-sparkles" | "wrench" | "zap" | "zoom-in";
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      title?: string;
      description?: string;
      href: string | "/" | null;
      target?: boolean;
      buttonVariant?: ButtonVariant;
    }> | null;
    image: {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      alt: string | null;
    } | null;
  } | {
    _type: "hero-174";
    _key: string;
    backgroundImage: {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      alt: string | null;
    } | null;
    title: string | null;
    body: Array<{
      title?: string;
      description?: string;
      _type: "alert";
      _key: string;
      markDefs: null;
    } | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet" | "number";
      markDefs: Array<{
        isExternal?: boolean;
        internalLink?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        } | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "post";
        };
        href: string | "/" | null;
        target?: boolean;
        _type: "link";
        _key: string;
      }> | null;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      _key: string;
      _type: "code";
      language?: string;
      filename?: string;
      code?: string;
      highlightedLines?: Array<number>;
      markDefs: null;
    } | {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
      markDefs: null;
    } | {
      videoId?: string;
      _type: "youtube";
      _key: string;
      markDefs: null;
    }> | null;
    links: Array<{
      _key: string;
      _type: "link-icon";
      iconVariant?: "arrow-down-to-line" | "arrow-up-down" | "bell" | "blocks" | "building-2" | "check-circle-2" | "chevron-down" | "chevron-left" | "chevron-right" | "chevron-up" | "circle-dot" | "code" | "compass" | "external-link" | "git-branch" | "globe" | "home" | "infinity" | "landmark" | "layout-grid" | "list" | "lock" | "messages-square" | "move-right" | "none" | "play-circle" | "play" | "redo" | "repeat" | "scaling" | "scan" | "sparkles" | "star" | "timer" | "trophy" | "users" | "wand-sparkles" | "wrench" | "zap" | "zoom-in";
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      title?: string;
      description?: string;
      href: string | "/" | null;
      target?: boolean;
      buttonVariant?: ButtonVariant;
    }> | null;
    tag: {
      title?: string;
      description?: string;
    } | null;
  } | {
    _type: "hero-25";
    _key: string;
    tagLine: string | null;
    title: string | null;
    image: {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      alt: string | null;
    } | null;
    links: Array<{
      _key: string;
      _type: "link-icon";
      iconVariant?: "arrow-down-to-line" | "arrow-up-down" | "bell" | "blocks" | "building-2" | "check-circle-2" | "chevron-down" | "chevron-left" | "chevron-right" | "chevron-up" | "circle-dot" | "code" | "compass" | "external-link" | "git-branch" | "globe" | "home" | "infinity" | "landmark" | "layout-grid" | "list" | "lock" | "messages-square" | "move-right" | "none" | "play-circle" | "play" | "redo" | "repeat" | "scaling" | "scan" | "sparkles" | "star" | "timer" | "trophy" | "users" | "wand-sparkles" | "wrench" | "zap" | "zoom-in";
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      title?: string;
      description?: string;
      href: string | "/" | null;
      target?: boolean;
      buttonVariant?: ButtonVariant;
    }> | null;
    tags: Array<{
      iconVariant?: "arrow-down-to-line" | "arrow-up-down" | "bell" | "blocks" | "building-2" | "check-circle-2" | "chevron-down" | "chevron-left" | "chevron-right" | "chevron-up" | "circle-dot" | "code" | "compass" | "external-link" | "git-branch" | "globe" | "home" | "infinity" | "landmark" | "layout-grid" | "list" | "lock" | "messages-square" | "move-right" | "none" | "play-circle" | "play" | "redo" | "repeat" | "scaling" | "scan" | "sparkles" | "star" | "timer" | "trophy" | "users" | "wand-sparkles" | "wrench" | "zap" | "zoom-in";
      title?: string;
      _type: "tag";
      _key: string;
    }> | null;
  } | {
    _type: "hero-57";
    _key: string;
    title: string | null;
    body: Array<{
      _key: string;
    } & Code | {
      title?: string;
      description?: string;
      _type: "alert";
      _key: string;
    } | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        isExternal?: boolean;
        internalLink?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        } | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "post";
        };
        href?: string;
        target?: boolean;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
    } | {
      videoId?: string;
      _type: "youtube";
      _key: string;
    }> | null;
    links: Array<{
      _key: string;
      _type: "link-icon";
      iconVariant?: "arrow-down-to-line" | "arrow-up-down" | "bell" | "blocks" | "building-2" | "check-circle-2" | "chevron-down" | "chevron-left" | "chevron-right" | "chevron-up" | "circle-dot" | "code" | "compass" | "external-link" | "git-branch" | "globe" | "home" | "infinity" | "landmark" | "layout-grid" | "list" | "lock" | "messages-square" | "move-right" | "none" | "play-circle" | "play" | "redo" | "repeat" | "scaling" | "scan" | "sparkles" | "star" | "timer" | "trophy" | "users" | "wand-sparkles" | "wrench" | "zap" | "zoom-in";
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      title?: string;
      description?: string;
      href: string | "/" | null;
      target?: boolean;
      buttonVariant?: ButtonVariant;
    }> | null;
    tags: Array<{
      iconVariant?: "arrow-down-to-line" | "arrow-up-down" | "bell" | "blocks" | "building-2" | "check-circle-2" | "chevron-down" | "chevron-left" | "chevron-right" | "chevron-up" | "circle-dot" | "code" | "compass" | "external-link" | "git-branch" | "globe" | "home" | "infinity" | "landmark" | "layout-grid" | "list" | "lock" | "messages-square" | "move-right" | "none" | "play-circle" | "play" | "redo" | "repeat" | "scaling" | "scan" | "sparkles" | "star" | "timer" | "trophy" | "users" | "wand-sparkles" | "wrench" | "zap" | "zoom-in";
      title?: string;
      _type: "tag";
      _key: string;
    }> | null;
  } | {
    _type: "hero-85";
    _key: string;
    tag: {
      title: string | null;
      description: string | null;
    } | null;
    title: string | null;
    body: Array<{
      title?: string;
      description?: string;
      _type: "alert";
      _key: string;
      markDefs: null;
    } | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
      listItem?: "bullet" | "number";
      markDefs: Array<{
        isExternal?: boolean;
        internalLink?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "page";
        } | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "post";
        };
        href: string | "/" | null;
        target?: boolean;
        _type: "link";
        _key: string;
      }> | null;
      level?: number;
      _type: "block";
      _key: string;
    } | {
      _key: string;
      _type: "code";
      language?: string;
      filename?: string;
      code?: string;
      highlightedLines?: Array<number>;
      markDefs: null;
    } | {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
      _key: string;
      markDefs: null;
    } | {
      videoId?: string;
      _type: "youtube";
      _key: string;
      markDefs: null;
    }> | null;
    images: Array<{
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      alt: string | null;
    }> | null;
    links: Array<{
      _key: string;
      _type: "link-icon";
      iconVariant?: "arrow-down-to-line" | "arrow-up-down" | "bell" | "blocks" | "building-2" | "check-circle-2" | "chevron-down" | "chevron-left" | "chevron-right" | "chevron-up" | "circle-dot" | "code" | "compass" | "external-link" | "git-branch" | "globe" | "home" | "infinity" | "landmark" | "layout-grid" | "list" | "lock" | "messages-square" | "move-right" | "none" | "play-circle" | "play" | "redo" | "repeat" | "scaling" | "scan" | "sparkles" | "star" | "timer" | "trophy" | "users" | "wand-sparkles" | "wrench" | "zap" | "zoom-in";
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      title?: string;
      description?: string;
      href: string | "/" | null;
      target?: boolean;
      buttonVariant?: ButtonVariant;
    }> | null;
  } | {
    _type: "logos-1";
    _key: string;
    padding: SectionPadding | null;
    title: string | null;
    images: Array<{
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt: string | null;
      _type: "image";
      _key: string;
    }> | null;
  } | {
    _type: "logos-4";
    _key: string;
    padding: SectionPadding | null;
    images: Array<{
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt: string | null;
      _type: "image";
      _key: string;
    }> | null;
  } | {
    _type: "logos-9";
    _key: string;
    padding: SectionPadding | null;
    title: string | null;
    images: Array<{
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt: string | null;
      _type: "image";
      _key: string;
    }> | null;
    testimonials: Array<{
      _id: string;
      _type: "testimonial";
      _createdAt: string;
      _updatedAt: string;
      _rev: string;
      name?: string;
      company?: string;
      image: {
        asset: {
          _id: string;
          url: string | null;
          mimeType: string | null;
          metadata: {
            lqip: string | null;
            dimensions: {
              width: number | null;
              height: number | null;
            } | null;
          } | null;
        } | null;
        media?: unknown;
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        alt: null;
      } | null;
      text?: string;
      rating?: number;
      orderRank?: string;
    }> | null;
  } | {
    _type: "section-header";
    _key: string;
    padding: SectionPadding | null;
    sectionWidth: "default" | "narrow" | null;
    stackAlign: "center" | "left" | null;
    direction: "column" | "row" | null;
    tag: {
      text?: string;
      type?: "badge" | "title";
    } | null;
    title: {
      text?: string;
      element?: "div" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "p";
      size?: "default" | "large" | "small";
      weight?: "bold" | "medium" | "normal" | "semibold";
    } | null;
    description: string | null;
    links: Array<{
      _key: string;
      _type: "link-icon";
      iconVariant?: "arrow-down-to-line" | "arrow-up-down" | "bell" | "blocks" | "building-2" | "check-circle-2" | "chevron-down" | "chevron-left" | "chevron-right" | "chevron-up" | "circle-dot" | "code" | "compass" | "external-link" | "git-branch" | "globe" | "home" | "infinity" | "landmark" | "layout-grid" | "list" | "lock" | "messages-square" | "move-right" | "none" | "play-circle" | "play" | "redo" | "repeat" | "scaling" | "scan" | "sparkles" | "star" | "timer" | "trophy" | "users" | "wand-sparkles" | "wrench" | "zap" | "zoom-in";
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      title?: string;
      description?: string;
      href: string | "/" | null;
      target?: boolean;
      buttonVariant?: ButtonVariant;
    }> | null;
  }> | null;
  meta_title: string | null;
  meta_description: string | null;
  noindex: boolean | null;
  ogImage: {
    asset: {
      _id: string;
      url: string | null;
      metadata: {
        dimensions: {
          width: number | null;
          height: number | null;
        } | null;
      } | null;
    } | null;
  } | null;
} | null;
// Variable: PAGES_SLUGS_QUERY
// Query: *[_type == "page" && defined(slug)]{slug}
export type PAGES_SLUGS_QUERYResult = Array<{
  slug: Slug | null;
}>;

// Source: ./sanity/queries/post.ts
// Variable: POST_QUERY
// Query: *[_type == "post" && slug.current == $slug][0]{    title,    slug,    image{      ...,      asset->{        _id,        url,        mimeType,        metadata {          lqip,          dimensions {            width,            height          }        }      },      alt    },    body[]{      ...,      markDefs[]{        ...,        _type == "link" => {              _key,    ...,    "href": select(      isExternal => href,      @.internalLink->slug.current == "index" => "/",      @.internalLink->_type == "post" => "/blog/" + @.internalLink->slug.current,      "/" + @.internalLink->slug.current    )        }      },      _type == "image" => {        ...,        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        }      }    },    author->{      name,      image {        ...,        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        },        alt      }    },    _createdAt,    _updatedAt,    meta_title,    meta_description,    noindex,    ogImage {      asset->{        _id,        url,        metadata {          dimensions {            width,            height          }        }      },    },    "estimatedReadingTime": round(length(pt::text(body)) / 5 / 180 )}
export type POST_QUERYResult = {
  title: string | null;
  slug: Slug | null;
  image: {
    asset: {
      _id: string;
      url: string | null;
      mimeType: string | null;
      metadata: {
        lqip: string | null;
        dimensions: {
          width: number | null;
          height: number | null;
        } | null;
      } | null;
    } | null;
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt: string | null;
    _type: "image";
  } | null;
  body: Array<{
    title?: string;
    description?: string;
    _type: "alert";
    _key: string;
    markDefs: null;
  } | {
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "blockquote" | "h1" | "h2" | "h3" | "h4" | "normal";
    listItem?: "bullet" | "number";
    markDefs: Array<{
      isExternal?: boolean;
      internalLink?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      } | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      };
      href: string | "/" | null;
      target?: boolean;
      _type: "link";
      _key: string;
    }> | null;
    level?: number;
    _type: "block";
    _key: string;
  } | {
    _key: string;
    _type: "code";
    language?: string;
    filename?: string;
    code?: string;
    highlightedLines?: Array<number>;
    markDefs: null;
  } | {
    asset: {
      _id: string;
      url: string | null;
      mimeType: string | null;
      metadata: {
        lqip: string | null;
        dimensions: {
          width: number | null;
          height: number | null;
        } | null;
      } | null;
    } | null;
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
    markDefs: null;
  } | {
    videoId?: string;
    _type: "youtube";
    _key: string;
    markDefs: null;
  }> | null;
  author: {
    name: string | null;
    image: {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt: string | null;
      _type: "image";
    } | null;
  } | null;
  _createdAt: string;
  _updatedAt: string;
  meta_title: string | null;
  meta_description: string | null;
  noindex: boolean | null;
  ogImage: {
    asset: {
      _id: string;
      url: string | null;
      metadata: {
        dimensions: {
          width: number | null;
          height: number | null;
        } | null;
      } | null;
    } | null;
  } | null;
  estimatedReadingTime: number;
} | null;
// Variable: POSTS_QUERY
// Query: *[_type == "post" && defined(slug)] | order(_createdAt desc)[$offset...$end]{    _id,    _createdAt,    title,    slug,    excerpt,    author->{      name,      title,      image {        ...,        asset->{          _id,          url,          mimeType,          metadata {            lqip,            dimensions {              width,              height            }          }        },        alt      }    },    image{      ...,      asset->{        _id,        url,        mimeType,        metadata {          lqip,          dimensions {            width,            height          }        }      },      alt    },    categories[]->{      _id,      title,    },}
export type POSTS_QUERYResult = Array<{
  _id: string;
  _createdAt: string;
  title: string | null;
  slug: Slug | null;
  excerpt: string | null;
  author: {
    name: string | null;
    title: string | null;
    image: {
      asset: {
        _id: string;
        url: string | null;
        mimeType: string | null;
        metadata: {
          lqip: string | null;
          dimensions: {
            width: number | null;
            height: number | null;
          } | null;
        } | null;
      } | null;
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt: string | null;
      _type: "image";
    } | null;
  } | null;
  image: {
    asset: {
      _id: string;
      url: string | null;
      mimeType: string | null;
      metadata: {
        lqip: string | null;
        dimensions: {
          width: number | null;
          height: number | null;
        } | null;
      } | null;
    } | null;
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt: string | null;
    _type: "image";
  } | null;
  categories: Array<{
    _id: string;
    title: string | null;
  }> | null;
}>;
// Variable: POSTS_SLUGS_QUERY
// Query: *[_type == "post" && defined(slug)]{slug}
export type POSTS_SLUGS_QUERYResult = Array<{
  slug: Slug | null;
}>;
// Variable: POSTS_COUNT_QUERY
// Query: count(*[_type == "post"])
export type POSTS_COUNT_QUERYResult = number;

// Source: ./sanity/queries/settings.ts
// Variable: SETTINGS_QUERY
// Query: *[_type == "settings"][0]{  _type,  siteName,  logo{    asset->{      _id,      url,      mimeType,      metadata {        lqip,        dimensions {          width,          height        }      }    },    alt,    width,    height  },  description,  copyright}
export type SETTINGS_QUERYResult = {
  _type: "settings";
  siteName: string | null;
  logo: {
    asset: {
      _id: string;
      url: string | null;
      mimeType: string | null;
      metadata: {
        lqip: string | null;
        dimensions: {
          width: number | null;
          height: number | null;
        } | null;
      } | null;
    } | null;
    alt: string | null;
    width: number | null;
    height: number | null;
  } | null;
  description: string | null;
  copyright: BlockContent | null;
} | null;

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    "\n    *[_type == 'page'] | order(slug.current) {\n      'url': $baseUrl + select(slug.current == 'index' => '', '/' + slug.current),\n      'lastModified': _updatedAt,\n      'changeFrequency': 'daily',\n      'priority': select(\n        slug.current == 'index' => 1,\n        0.5\n      )\n    }\n  ": PagesQueryResult;
    "\n    *[_type == 'post'] | order(_updatedAt desc) {\n      'url': $baseUrl + '/blog/' + slug.current,\n      'lastModified': _updatedAt,\n      'changeFrequency': 'weekly',\n      'priority': 0.7\n    }\n  ": PostsQueryResult;
    "*[_type == \"contact\"][0]{\n  tagline,\n  title,\n  description,\n  contactMethods[]{\n    icon,\n    title,\n    description,\n    link {\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    }\n  },\n  meta_title,\n  meta_description,\n  noindex,\n  ogImage {\n    asset->{\n      _id,\n      url,\n      metadata {\n        dimensions {\n          width,\n          height\n        }\n      }\n    },\n  }\n}": CONTACT_QUERYResult;
    "\n  *[_type == \"navigation\"]{\n    _type,\n    _key,\n    title,\n    links[]{\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n,\n      _type == \"link-group\" => {\n        links[]{\n          \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n        }\n      }\n    }\n  }\n": NAVIGATION_QUERYResult;
    "\n  *[_type == \"page\" && slug.current == $slug][0]{\n    blocks[]{\n      \n  _type == \"section-header\" => {\n    _type,\n    _key,\n    padding,\n    sectionWidth,\n    stackAlign,\n    direction,\n    tag,\n    title,\n    description,\n    links[]{\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    },\n  }\n,\n      \n  _type == \"hero-12\" => {\n    _type,\n    _key,\n    backgroundImage{\n      asset->{\n        _id,\n        url,\n        mimeType,\n        metadata {\n          lqip,\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n      alt\n    },\n    tagLine,\n    title,\n    body[]{\n      ...,\n      markDefs[]{\n        ...,\n        _type == \"link\" => {\n          \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n        }\n      },\n      _type == \"image\" => {\n        ...,\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    },\n    image{\n      asset->{\n        _id,\n        url,\n        mimeType,\n        metadata {\n          lqip,\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n      alt\n    },\n    links[]{\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    },\n    techLogos[]{\n      _key,\n      title,\n      link,\n      image{\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        },\n        alt\n      }\n    }\n  }\n,\n      \n  _type == \"hero-13\" => {\n    _type,\n    _key,\n    tag,\n    title,\n    body[]{\n      ...,\n      markDefs[]{\n        ...,\n        _type == \"link\" => {\n          \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n        }\n      },\n      _type == \"image\" => {\n        ...,\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    },\n    links[]{\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    },\n  }\n,\n      \n  _type == \"hero-25\" => {\n    _type,\n    _key,\n    tagLine,\n    title,\n    image{\n      asset->{\n        _id,\n        url,\n        mimeType,\n        metadata {\n          lqip,\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n      alt\n    },\n    links[]{\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    },\n    tags\n  }\n,\n      \n  _type == \"hero-57\" => {\n    _type,\n    _key,\n    title,\n    body,\n    links[]{\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    },\n    tags\n  }\n,\n      \n  _type == \"hero-85\" => {\n    _type,\n    _key,\n    tag{\n      title,\n      description\n    },\n    title,\n    body[]{\n      ...,\n      markDefs[]{\n        ...,\n        _type == \"link\" => {\n          \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n        }\n      },\n      _type == \"image\" => {\n        ...,\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    },\n    images[]{\n      asset->{\n        _id,\n        url,\n        mimeType,\n        metadata {\n          lqip,\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n      alt\n    },\n    links[]{\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    },\n  }\n,\n      \n  _type == \"hero-160\" => {\n    _type,\n    _key,\n    backgroundImage{\n      asset->{\n        _id,\n        url,\n        mimeType,\n        metadata {\n          lqip,\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n      alt\n    },\n    tag,\n    title,\n    body[]{\n      ...,\n      markDefs[]{\n        ...,\n        _type == \"link\" => {\n          \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n        }\n      },\n      _type == \"image\" => {\n        ...,\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    },\n    links[]{\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    },\n    image{\n      asset->{\n        _id,\n        url,\n        mimeType,\n        metadata {\n          lqip,\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n      alt\n    },\n  }\n,\n      \n  _type == \"hero-174\" => {\n    _type,\n    _key,\n    backgroundImage{\n      asset->{\n        _id,\n        url,\n        mimeType,\n        metadata {\n          lqip,\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n      alt\n    },\n    title,\n    body[]{\n      ...,\n      markDefs[]{\n        ...,\n        _type == \"link\" => {\n          \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n        }\n      },\n      _type == \"image\" => {\n        ...,\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    },\n    links[]{\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    },\n    tag\n  }\n,\n      \n  _type == \"faq-1\" => {\n    _type,\n    _key,\n    padding,\n    faqs[]->{\n      _id,\n      title,\n      body[]{\n        ...,\n        markDefs[]{\n          ...,\n          _type == \"link\" => {\n            \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n          }\n        },\n        _type == \"image\" => {\n          ...,\n          asset->{\n            _id,\n            url,\n            mimeType,\n            metadata {\n              lqip,\n              dimensions {\n                width,\n                height\n              }\n            }\n          }\n        }\n      },\n    },\n  }\n,\n      \n  _type == \"faq-5\" => {\n    _type,\n    _key,\n    padding,\n    faqs[]->{\n      _id,\n      title,\n      body[]{\n        ...,\n        markDefs[]{\n          ...,\n          _type == \"link\" => {\n            \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n          }\n        },\n        _type == \"image\" => {\n          ...,\n          asset->{\n            _id,\n            url,\n            mimeType,\n            metadata {\n              lqip,\n              dimensions {\n                width,\n                height\n              }\n            }\n          }\n        }\n      },\n    },\n  }\n,\n      \n  _type == \"faq-8\" => {\n    _type,\n    _key,\n    padding,\n    sections[]{\n      _type,\n      _key,\n      title,\n      faqs[]->{\n        _id,\n        title,\n        body[]{\n          ...,\n          markDefs[]{\n            ...,\n            _type == \"link\" => {\n              \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n            }\n          },\n          _type == \"image\" => {\n            ...,\n            asset->{\n              _id,\n              url,\n              mimeType,\n              metadata {\n                lqip,\n                dimensions {\n                  width,\n                  height\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n,\n      \n  _type == \"faq-9\" => {\n    _type,\n    _key,\n    padding,\n    faqs[]->{\n      _id,\n      title,\n      body[]{\n        ...,\n        markDefs[]{\n          ...,\n          _type == \"link\" => {\n            \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n          }\n        },\n        _type == \"image\" => {\n          ...,\n          asset->{\n            _id,\n            url,\n            mimeType,\n            metadata {\n              lqip,\n              dimensions {\n                width,\n                height\n              }\n            }\n          }\n        }\n      },\n    },\n  }\n,\n      \n  _type == \"faq-14\" => {\n    _type,\n    _key,\n    padding,\n    title,\n    description,\n    sections[]{\n      _type,\n      _key,\n      title,\n      faqs[]->{\n        _id,\n        title,\n        body[]{\n          ...,\n          markDefs[]{\n            ...,\n            _type == \"link\" => {\n              \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n            }\n          },\n          _type == \"image\" => {\n            ...,\n            asset->{\n              _id,\n              url,\n              mimeType,\n              metadata {\n                lqip,\n                dimensions {\n                  width,\n                  height\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n,\n      \n  _type == \"logos-1\" => {\n    _type,\n    _key,\n    padding,\n    title,\n    images[]{\n      ...,\n      asset->{\n        _id,\n        url,\n        mimeType,\n        metadata {\n          lqip,\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n      alt\n    },\n  }\n,\n      \n  _type == \"logos-4\" => {\n    _type,\n    _key,\n    padding,\n    images[]{\n      ...,\n      asset->{\n        _id,\n        url,\n        mimeType,\n        metadata {\n          lqip,\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n      alt\n    },\n  }\n,\n      \n  _type == \"logos-9\" => {\n    _type,\n    _key,\n    padding,\n    title,\n    images[]{\n      ...,\n      asset->{\n        _id,\n        url,\n        mimeType,\n        metadata {\n          lqip,\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n      alt\n    },\n    testimonials[]->{\n      ...,\n      image{\n        ...,\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        },\n        alt\n      },\n    }\n  }\n,\n      \n  _type == \"feature-1\" => {\n    _type,\n    _key,\n    padding,\n    columns[]{\n      \n  _type == \"feature-content\" => {\n    _type,\n    _key,\n    padding,\n    iconVariant,\n    tag,\n    title,\n    body[]{\n      ...,\n      markDefs[]{\n        ...,\n        _type == \"link\" => {\n          \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n        }\n      },\n      _type == \"image\" => {\n        ...,\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    },\n    links[]{\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    },\n  }\n,\n      \n  _type == \"feature-image\" => {\n    _type,\n    _key,\n    image{\n      asset->{\n        _id,\n        url,\n        mimeType,\n        metadata {\n          lqip,\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n      alt\n    },\n  }\n,\n    },\n  }\n,\n      \n  _type == \"feature-3\" => {\n    _type,\n    _key,\n    padding,\n    columns[]{\n      \n  _type == \"feature-3-card\" => {\n    _type,\n    _key,\n    iconVariant,\n    title,\n    description,\n    image{\n      asset->{\n        _id,\n        url,\n        mimeType,\n        metadata {\n          lqip,\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n      alt\n    }\n  }\n,\n    },\n  }\n,\n      \n  _type == \"feature-12\" => {\n    _type,\n    _key,\n    padding,\n    tagline,\n    columns[]{\n      \n  _type == \"feature-12-card\" => {\n    _type,\n    _key,\n    iconVariant,\n    title,\n    description,\n  }\n,\n    },\n  }\n,\n      \n  _type == \"feature-15\" => {\n    _type,\n    _key,\n    padding,\n    gridColumns,\n    columns[]{\n      \n  _type == \"feature-15-card\" => {\n    _type,\n    _key,\n    iconVariant,\n    title,\n    description,\n  }\n,\n    },\n  }\n,\n      \n  _type == \"feature-66\" => {\n    _type,\n    _key,\n    padding,\n    columns[]{\n      \n  _type == \"feature-66-card\" => {\n    _type,\n    _key,\n    logo{\n      asset->{\n        _id,\n        url,\n        mimeType,\n        metadata {\n          lqip,\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n      alt\n    },\n    image{\n      asset->{\n        _id,\n        url,\n        mimeType,\n        metadata {\n          lqip,\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n      alt\n    },\n    link {\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    }\n  }\n,\n    },\n  }\n,\n      \n  _type == \"feature-117\" => {\n    _type,\n    _key,\n    padding,\n    columns[]{\n      \n  _type == \"feature-117-card\" => {\n    _type,\n    _key,\n    tag,\n    title,\n    image{\n      asset->{\n        _id,\n        url,\n        mimeType,\n        metadata {\n          lqip,\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n      alt\n    },\n    link {\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    }\n  }\n,\n    },\n  }\n,\n      \n  _type == \"feature-157\" => {\n    _type,\n    _key,\n    padding,\n    columns[]{\n      \n  _type == \"feature-157-card\" => {\n    _type,\n    _key,\n    image{\n      asset->{\n        _id,\n        url,\n        mimeType,\n        metadata {\n          lqip,\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n      alt\n    },\n    link {\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    }\n  }\n,\n    },\n  }\n,\n      \n  _type == \"feature-202\" => {\n    _type,\n    _key,\n    padding,\n    columns[]{\n      \n  _type == \"feature-202-card\" => {\n    _type,\n    _key,\n    iconVariant,\n    title,\n    description,\n    image{\n      asset->{\n        _id,\n        url,\n        mimeType,\n        metadata {\n          lqip,\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n      alt\n    },\n    link {\n      \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n    }\n  }\n,\n    },\n  }\n,\n      \n  _type == \"blog-4\" => {\n    _type,\n    _key,\n    padding,\n    gridColumns,\n    posts[]->{\n      _id,\n      _createdAt,\n      title,\n      slug,\n      excerpt,\n      image{\n        ...,\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        },\n        alt\n      },\n      categories[]->{\n        _id,\n        title,\n      },\n      author->{\n        _id,\n        name,\n        image{\n          ...,\n          asset->{\n            _id,\n            url,\n            mimeType,\n            metadata {\n              lqip,\n              dimensions {\n                width,\n                height\n              }\n            }\n          },\n        }\n      }\n    },\n  }\n,\n      \n  _type == \"all-posts-4\" => {\n    _type,\n    _key,\n    padding\n  }\n,\n      \n  _type == \"blog-7\" => {\n    _type,\n    _key,\n    padding,\n    gridColumns,\n    posts[]->{\n      _id,\n      _createdAt,\n      title,\n      slug,\n      excerpt,\n      image{\n        ...,\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        },\n        alt\n      },\n    },\n  }\n,\n      \n  _type == \"all-posts-7\" => {\n    _type,\n    _key,\n    padding\n  }\n,\n      \n  _type == \"blog-13\" => {\n    _type,\n    _key,\n    padding,\n    gridColumns,\n    posts[]->{\n      _id,\n      _createdAt,\n      title,\n      slug,\n      image{\n        ...,\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        },\n        alt\n      },\n      categories[]->{\n        _id,\n        title,\n      },\n    },\n  }\n,\n      \n  _type == \"all-posts-13\" => {\n    _type,\n    _key,\n    padding\n  }\n,\n      \n  _type == \"blog-14\" => {\n    _type,\n    _key,\n    padding,\n    gridColumns,\n    title,\n    posts[]->{\n      _id,\n      _createdAt,\n      title,\n      slug,\n      excerpt,\n      image{\n        ...,\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        },\n        alt\n      },\n      categories[]->{\n        _id,\n        title,\n      },\n      author->{\n        _id,\n        name,\n        image{\n          ...,\n          asset->{\n            _id,\n            url,\n            mimeType,\n            metadata {\n              lqip,\n              dimensions {\n                width,\n                height\n              }\n            }\n          },\n        }\n      }\n    },\n  }\n,\n      \n  _type == \"all-posts-14\" => {\n    _type,\n    _key,\n    padding\n  }\n,\n      \n  _type == \"blog-16\" => {\n    _type,\n    _key,\n    padding,\n    posts[]->{\n      _id,\n      _createdAt,\n      title,\n      slug,\n      categories[]->{\n        _id,\n        title,\n      },\n      author->{\n        _id,\n        name,\n        title,\n        image{\n          ...,\n          asset->{\n            _id,\n            url,\n            mimeType,\n            metadata {\n              lqip,\n              dimensions {\n                width,\n                height\n              }\n            }\n          },\n        }\n      }\n    },\n  }\n,\n      \n  _type == \"all-posts-16\" => {\n    _type,\n    _key,\n    padding\n  }\n,\n    },\n    meta_title,\n    meta_description,\n    noindex,\n    ogImage {\n      asset->{\n        _id,\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n    }\n  }\n": PAGE_QUERYResult;
    "*[_type == \"page\" && defined(slug)]{slug}": PAGES_SLUGS_QUERYResult;
    "*[_type == \"post\" && slug.current == $slug][0]{\n    title,\n    slug,\n    image{\n      ...,\n      asset->{\n        _id,\n        url,\n        mimeType,\n        metadata {\n          lqip,\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n      alt\n    },\n    body[]{\n      ...,\n      markDefs[]{\n        ...,\n        _type == \"link\" => {\n          \n    _key,\n    ...,\n    \"href\": select(\n      isExternal => href,\n      @.internalLink->slug.current == \"index\" => \"/\",\n      @.internalLink->_type == \"post\" => \"/blog/\" + @.internalLink->slug.current,\n      \"/\" + @.internalLink->slug.current\n    )\n\n        }\n      },\n      _type == \"image\" => {\n        ...,\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        }\n      }\n    },\n    author->{\n      name,\n      image {\n        ...,\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        },\n        alt\n      }\n    },\n    _createdAt,\n    _updatedAt,\n    meta_title,\n    meta_description,\n    noindex,\n    ogImage {\n      asset->{\n        _id,\n        url,\n        metadata {\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n    },\n    \"estimatedReadingTime\": round(length(pt::text(body)) / 5 / 180 )\n}": POST_QUERYResult;
    "*[_type == \"post\" && defined(slug)] | order(_createdAt desc)[$offset...$end]{\n    _id,\n    _createdAt,\n    title,\n    slug,\n    excerpt,\n    author->{\n      name,\n      title,\n      image {\n        ...,\n        asset->{\n          _id,\n          url,\n          mimeType,\n          metadata {\n            lqip,\n            dimensions {\n              width,\n              height\n            }\n          }\n        },\n        alt\n      }\n    },\n    image{\n      ...,\n      asset->{\n        _id,\n        url,\n        mimeType,\n        metadata {\n          lqip,\n          dimensions {\n            width,\n            height\n          }\n        }\n      },\n      alt\n    },\n    categories[]->{\n      _id,\n      title,\n    },\n}": POSTS_QUERYResult;
    "*[_type == \"post\" && defined(slug)]{slug}": POSTS_SLUGS_QUERYResult;
    "count(*[_type == \"post\"])": POSTS_COUNT_QUERYResult;
    "*[_type == \"settings\"][0]{\n  _type,\n  siteName,\n  logo{\n    asset->{\n      _id,\n      url,\n      mimeType,\n      metadata {\n        lqip,\n        dimensions {\n          width,\n          height\n        }\n      }\n    },\n    alt,\n    width,\n    height\n  },\n  description,\n  copyright\n}": SETTINGS_QUERYResult;
  }
}
